/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EditorImport } from './routes/editor'
import { Route as MediaImport } from './routes/media'

// Create/Update Routes

const MediaRoute = MediaImport.update({
  id: '/media',
  path: '/media',
  getParentRoute: () => rootRoute,
} as any)

const EditorRoute = EditorImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorImport
      parentRoute: typeof rootRoute
    }
    '/media': {
      id: '/media'
      path: '/media'
      fullPath: '/media'
      preLoaderRoute: typeof MediaImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/editor': typeof EditorRoute
  '/media': typeof MediaRoute
}

export interface FileRoutesByTo {
  '/editor': typeof EditorRoute
  '/media': typeof MediaRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/editor': typeof EditorRoute
  '/media': typeof MediaRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/editor' | '/media'
  fileRoutesByTo: FileRoutesByTo
  to: '/editor' | '/media'
  id: '__root__' | '/editor' | '/media'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  EditorRoute: typeof EditorRoute
  MediaRoute: typeof MediaRoute
}

const rootRouteChildren: RootRouteChildren = {
  EditorRoute: EditorRoute,
  MediaRoute: MediaRoute,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/editor",
        "/media"
      ]
    },
    "/editor": {
      "filePath": "editor.tsx"
    },
    "/media": {
      "filePath": "media.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
